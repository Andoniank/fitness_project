/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/api.js":
/*!********************!*\
  !*** ./src/api.js ***!
  \********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBaseImage: function() { return /* binding */ getBaseImage; },\n/* harmony export */   getImage: function() { return /* binding */ getImage; },\n/* harmony export */   getMuscleGroups: function() { return /* binding */ getMuscleGroups; },\n/* harmony export */   getWorkoutInfo: function() { return /* binding */ getWorkoutInfo; },\n/* harmony export */   getWorkouts: function() { return /* binding */ getWorkouts; }\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n// Fetches\n\n\n\n// pulls an array of muscle groups and sents the result to renderMuscleGroups in render.js\n// gets called on index.js\nconst getMuscleGroups = async () => {\n  const url =  false ? 0 : 'http://localhost:5001/muscleGroups';\n  try {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    let muscleGroups;\n    if (response.ok) {\n      muscleGroups = await response.json();\n      _render_js__WEBPACK_IMPORTED_MODULE_0__.renderMuscleGroups(muscleGroups);\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// pulls the stock image of the body model with no muscles highlighted and sends it to renderBaseImage in render.js\n// gets called on index.js\nconst getBaseImage = async () => {\n  const url =  false ? 0 : 'http://localhost:5001/baseImage';\n  try {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    let baseImage;\n    if (response.ok) {\n      baseImage = response.blob();\n      console.log(baseImage);\n      // render.renderBaseImg(baseImage)\n      return baseImage;\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// gets the apporpritae image with the muscle group that is sent into it highlighted and sends it to renderMuscleImage in render.js\n// gets called in the eventListeners in renderMuscleGroup in render.js when the appropriate muscle group is selected\nconst getImage = async muscleGroup => {\n  const url =  false ? 0 : 'http://localhost:5001/image';\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        muscleGroup: muscleGroup\n      }\n    });\n    let muscleData;\n    if (response.ok) {\n      muscleData = await response.blob();\n      _render_js__WEBPACK_IMPORTED_MODULE_0__.renderMuscleImg(muscleData);\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// gets the array of workout objects based on the muscle name sent in and send its to renderWorkouts in render.js where only the name key value pair is used to create the workout buttons\n// gets called in renderMuscleGroups in render.js when the appropriate muscle group is selected\nconst getWorkouts = async muscle => {\n  const url =  false ? 0 : 'http://localhost:5001/workoutNames';\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        muscle: muscle\n      }\n    });\n    let workouts;\n    if (response.ok) {\n      workouts = await response.json();\n      _render_js__WEBPACK_IMPORTED_MODULE_0__.renderWorkouts(workouts);\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// gets the array of workout objects which is sent to renderWorkoutInfo in render.js where the appropriate info is selected.\n// gets called in renderWorkouts in render.js if the appropiate workout button is pressed.\nconst getWorkoutInfo = async (muscle, name) => {\n  const url =  false ? 0 : 'http://localhost:5001/workoutInfo';\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        muscle: muscle\n      }\n    });\n    let workoutInfo;\n    if (response.ok) {\n      workoutInfo = await response.json();\n      _render_js__WEBPACK_IMPORTED_MODULE_0__.renderWorkoutInfo(workoutInfo, name);\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n\n\n\n//homepage\n\n//both are calle from api.js\n_api_js__WEBPACK_IMPORTED_MODULE_0__.getMuscleGroups();\n_api_js__WEBPACK_IMPORTED_MODULE_0__.getBaseImage().then(baseImage => {\n  const blob = new Blob([baseImage], {\n    type: 'image/png'\n  });\n  console.log(blob);\n  _render_js__WEBPACK_IMPORTED_MODULE_1__.renderBaseImg(blob);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStCO0FBQ007O0FBR3JDOztBQUVBO0FBQ0FBLG9EQUFtQixDQUFDLENBQUM7QUFDckJBLGlEQUFnQixDQUFDLENBQUMsQ0FDYkksSUFBSSxDQUFFQyxTQUFTLElBQUs7RUFDakIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUksQ0FBQyxDQUFDRixTQUFTLENBQUMsRUFBRTtJQUFDRyxJQUFJLEVBQUM7RUFBVyxDQUFDLENBQUM7RUFDdERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixJQUFJLENBQUM7RUFDakJMLHFEQUFvQixDQUFDSyxJQUFJLENBQUM7QUFDOUIsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZml0bmVzc19wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXBpIGZyb20gJy4vYXBpLmpzJ1xuaW1wb3J0ICogYXMgcmVuZGVyIGZyb20gJy4vcmVuZGVyLmpzJ1xuXG5cbi8vaG9tZXBhZ2VcblxuLy9ib3RoIGFyZSBjYWxsZSBmcm9tIGFwaS5qc1xuYXBpLmdldE11c2NsZUdyb3VwcygpXG5hcGkuZ2V0QmFzZUltYWdlKClcbiAgICAudGhlbigoYmFzZUltYWdlKSA9PiB7XG4gICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbYmFzZUltYWdlXSwge3R5cGU6J2ltYWdlL3BuZyd9KVxuICAgICAgICBjb25zb2xlLmxvZyhibG9iKVxuICAgICAgICByZW5kZXIucmVuZGVyQmFzZUltZyhibG9iKVxuICAgIH0pXG5cbiJdLCJuYW1lcyI6WyJhcGkiLCJyZW5kZXIiLCJnZXRNdXNjbGVHcm91cHMiLCJnZXRCYXNlSW1hZ2UiLCJ0aGVuIiwiYmFzZUltYWdlIiwiYmxvYiIsIkJsb2IiLCJ0eXBlIiwiY29uc29sZSIsImxvZyIsInJlbmRlckJhc2VJbWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/render.js":
/*!***********************!*\
  !*** ./src/render.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearWorkoutInfo: function() { return /* binding */ clearWorkoutInfo; },\n/* harmony export */   clearWorkouts: function() { return /* binding */ clearWorkouts; },\n/* harmony export */   renderBaseImg: function() { return /* binding */ renderBaseImg; },\n/* harmony export */   renderMuscleGroups: function() { return /* binding */ renderMuscleGroups; },\n/* harmony export */   renderMuscleImg: function() { return /* binding */ renderMuscleImg; },\n/* harmony export */   renderWorkoutInfo: function() { return /* binding */ renderWorkoutInfo; },\n/* harmony export */   renderWorkouts: function() { return /* binding */ renderWorkouts; }\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n\n\n//Query Selectors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst muscleDisplay = document.querySelector(\".muscle-image\");\nconst muscleGroups = document.querySelector('#muscle-groups');\nconst workouts = document.querySelector(\".workouts\");\nconst workoutDisplay = document.querySelector(\"#workout-display\");\n\n// RENDERS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// renders the appropriate muscle group buttons based on the API info passed into it from getMuscleGroups\n// adds event listeners to those buttons that call both getImage and getWorkouts to display both\nconst renderMuscleGroups = array => {\n  for (let i = 0; i < array.length; i++) {\n    let muscleGroup = array[i];\n    const muscleButton = muscleGroups.appendChild(document.createElement(\"input\"));\n    muscleButton.type = 'submit';\n    // if (array[i] === \"abs\") {\n    //     array[i] = \"abdominals\"\n    // }\n    muscleButton.value = muscleGroup;\n    muscleButton.className = \"muscle-groups-button\";\n    muscleButton.id = muscleGroup;\n    muscleButton.addEventListener('click', e => {\n      e.preventDefault();\n      clearWorkouts();\n      clearWorkoutInfo();\n      _api_js__WEBPACK_IMPORTED_MODULE_0__.getImage(muscleGroup);\n      _api_js__WEBPACK_IMPORTED_MODULE_0__.getWorkouts(muscleGroup);\n    });\n  }\n};\n\n// renders the stock image with no muscle group selected\nconst renderBaseImg = url => {\n  const imageUrl = URL.createObjectURL(url);\n  // console.log(imageUrl)\n  const newImg = document.createElement(\"img\");\n  const container = document.querySelector(\".container\");\n  newImg.src = imageUrl;\n  console.log(newImg);\n  container.appendChild(newImg);\n  // muscleDisplay.appendChild(newImg)\n};\n\n// renders the muscle image with the appropriate muscles highlighted\nconst renderMuscleImg = url => {\n  const imageUrl = URL.createObjectURL(url);\n  // const newImg = document.querySelector(\".muscle-image\")\n  muscleDisplay.src = imageUrl;\n  // muscleDisplay.appendChild(newImg)\n};\n\n// renders the apporpiate workout buttons based on which muscle groups where selected from getWorkouts\n// adds an eventListener to each button that calls getWorkoutInfo, which then displays that workout info based on the muscle and workout name that is sent in\nconst renderWorkouts = array => {\n  for (let i = 0; i < array.length; i++) {\n    let workout = array[i];\n    const workoutButton = workouts.appendChild(document.createElement(\"input\"));\n    workoutButton.type = \"submit\";\n    workoutButton.className = \"workout-buttons\";\n    workoutButton.value = workout.name;\n    workoutButton.id = workout.name;\n    workoutButton.addEventListener('click', e => {\n      e.preventDefault();\n      _api_js__WEBPACK_IMPORTED_MODULE_0__.getWorkoutInfo(workout.muscle, workout.name);\n    });\n  }\n};\n\n// renders the workout information that called from getWorkoutInfo and displays the name of the workout, the type, the equipment needed, and the workout instructions\nconst renderWorkoutInfo = (array, name) => {\n  clearWorkoutInfo();\n  for (let i = 0; i < array.length; i++) {\n    let workout = array[i];\n    if (workout.name === name) {\n      const title = workoutDisplay.appendChild(document.createElement(\"h3\"));\n      const type = workoutDisplay.appendChild(document.createElement(\"p\"));\n      const equipment = workoutDisplay.appendChild(document.createElement(\"p\"));\n      const description = workoutDisplay.appendChild(document.createElement(\"p\"));\n      title.textContent = workout.name;\n      type.textContent = \"type: \" + workout.type;\n      equipment.textContent = \"equipment needed: \" + workout.equipment;\n      description.textContent = \"instructions: \" + workout.instructions;\n    }\n  }\n};\n\n//clear buttons ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// called in renderMuscleGroups\n// clears the curretly displayed workouts\nconst clearWorkouts = () => {\n  while (workouts.firstChild) {\n    workouts.removeChild(workouts.firstChild);\n  }\n};\n\n//called in renderMuscleGroups and renderWorkoutInfo\n//clears currently displayed workout info \nconst clearWorkoutInfo = () => {\n  while (workoutDisplay.firstChild) {\n    workoutDisplay.removeChild(workoutDisplay.firstChild);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXRuZXNzX3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;